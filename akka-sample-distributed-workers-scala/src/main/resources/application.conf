akka {
  actor {
    # Must be set like this to use Akka Cluster
    provider = cluster
    serialization-bindings {
      "worker.CborSerializable" = jackson-cbor
    }
  }

  # filtered further in logback.xml
  loglevel = DEBUG

  remote.artery.canonical {
    hostname = "127.0.0.1"
    # overriden in the main method
    port = 2551
  }

  cluster {
    # Seed nodes are a way to have a node join the cluster (or form a new cluster) from configuration.
    seed-nodes = [
      "akka://ClusterSystem@127.0.0.1:2551",
      "akka://ClusterSystem@127.0.0.1:3000"
      ]

    # Needed when running many actor systems in the same JVM
    jmx.multi-mbeans-in-same-jvm = on

    downing-provider-class = "akka.cluster.sbr.SplitBrainResolverProvider"
  }

  # use Cassandra to store both snapshots and the events of the persistent actors
  persistence {
    journal.plugin = "akka.persistence.cassandra.journal"
    snapshot-store.plugin = "akka.persistence.cassandra.snapshot"
  }
}

akka.persistence.cassandra {
  journal {
    keyspace-autocreate = true
    tables-autocreate = true
  }
  snapshot {
    keyspace-autocreate = true
    tables-autocreate = true
  }
}

# Configuration related to the app is in its own namespace
distributed-workers {
  # If a workload hasn't finished in this long it
  # is considered failed and is retried
  work-timeout = 10s

  # Timeout for worker waiting for ack from work manager
  work-ack-timeout = 5s
}
