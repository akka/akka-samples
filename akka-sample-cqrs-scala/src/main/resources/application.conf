akka {
  //log-config-on-start = on

  loglevel = INFO
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  actor {
    provider = cluster
  }

  # For the sample, just bind to loopback and do not allow access from the network
  # the port is overridden by the logic in main class
  remote.artery {
    canonical.port = 0
    canonical.hostname = 127.0.0.1
    transport = tcp
    enabled = on
  }

  cluster {
    seed-nodes = [
      "akka://ClusterSystem@127.0.0.1:2551",
      "akka://ClusterSystem@127.0.0.1:2552"
    ]

    # auto downing is NOT safe for production deployments.
    # you may want to use it during development, read more about it in the docs.
    auto-down-unreachable-after = 10s

  }

  # use Cassandra to store both snapshots and the events of the persistent actors
  persistence {
    journal.plugin = "cassandra-journal"
    snapshot-store.plugin = "cassandra-snapshot-store"
  }

}

event-processor {
  id = "event-processor"           // type name of sharded event processor
  keep-alive-interval = 2 seconds  // event-processors ping interval
  tag-prefix = "tag"               // even processor tag prefix
  parallelism = 4                  // number of event processors
}

switch {
  id = "switch-processor"          // type name of sharded write model
  shard-count = 20

}

